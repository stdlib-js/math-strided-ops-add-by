// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=Object.defineProperty,t=Object.prototype,n=t.toString,o=t.__defineGetter__,a=t.__defineSetter__,u=t.__lookupGetter__,i=t.__lookupSetter__;var l=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?e:function(r,e,l){var c,_,f,p;if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof l||null===l||"[object Array]"===n.call(l))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+l+"`.");if((_="value"in l)&&(u.call(r,e)||i.call(r,e)?(c=r.__proto__,r.__proto__=t,delete r[e],r[e]=l.value,r.__proto__=c):r[e]=l.value),f="get"in l,p="set"in l,_&&(f||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&o&&o.call(r,e,l.get),p&&a&&a.call(r,e,l.set),r};function c(r,e,t){l(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})}function _(r,e,t,n,o,a,u,i,l,c){var _,f,p,d,y;if(r<=0)return a;for(_=t<0?(1-r)*t:0,f=o<0?(1-r)*o:0,p=u<0?(1-r)*u:0,y=0;y<r;y++)void 0!==(d=l.call(c,e[_],n[f],y,_,f,p,e,n,a))&&(a[p]=i(d[0],d[1])),_+=t,f+=o,p+=u;return a}function f(r,e,t,n,o,a,u,i,l,c,_,f,p){var d,y,b,v,s;if(r<=0)return i;for(d=n,y=u,b=c,s=0;s<r;s++)void 0!==(v=f.call(p,e[d],o[y],s,d,y,b,e,o,i))&&(i[b]=_(v[0],v[1])),d+=t,y+=a,b+=l;return i}function p(r,e){return r+e}function d(r,e,t,n,o,a,u,i,l){return _(r,e,t,n,o,a,u,p,i,l)}function y(r,e,t,n,o,a,u,i,l,c,_,d){return f(r,e,t,n,o,a,u,i,l,c,p,_,d)}c(_,"ndarray",f),c(d,"ndarray",y);export{d as default,y as ndarray};
//# sourceMappingURL=mod.js.map
